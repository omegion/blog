__NUXT_JSONP__("/how-to-install-argocd-on-kubernetes-cluster", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw,ax,ay,az,aA,aB,aC,aD,aE,aF,aG,aH,aI,aJ,aK,aL,aM,aN,aO,aP,aQ,aR,aS,aT,aU,aV,aW){return {data:[{}],fetch:{"Index:0":{article:{slug:"how-to-install-argocd-on-kubernetes-cluster",description:"This is an article to explain how to install ArgoCD on kubernetes cluster.",title:"How to install ArgoCD on Kubernetes cluster",author:"hakan",category:ac,tags:[ac,ad,"argo",ae],thumbnail:"pexels-chanaka-906494.jpg",isPublished:true,createdAt:"2021-06-02T00:00:00.000Z",toc:[{id:af,depth:D,text:ag},{id:ah,depth:D,text:ai},{id:aj,depth:D,text:ak},{id:al,depth:y,text:am},{id:an,depth:y,text:ao},{id:ap,depth:y,text:aq},{id:ar,depth:y,text:as},{id:at,depth:y,text:au},{id:av,depth:y,text:aw},{id:ax,depth:y,text:ay},{id:Q,depth:y,text:az},{id:R,depth:y,text:aA},{id:aB,depth:y,text:aC},{id:aD,depth:D,text:aE},{id:aF,depth:D,text:aG},{id:aH,depth:D,text:aI}],body:{type:"root",children:[{type:b,tag:E,props:{id:af},children:[{type:b,tag:l,props:{href:"#introduction",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:ag}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Kubernetes became one of the de facto standards for containerized applications. Many cloud platforms from the smallest\nto the largest like Scaleway, DigitalOcean, AWS, Google Cloud, Azure, and IBM Cloud now provide managed services for\nKubernetes. Creating a cluster and deploying an application into it became so easy that it takes a couple of minutes to\nrun your application on it. As these companies abstract the architecture layer from the developer that you do not need\nto maintain a cluster anymore, deployment of the application became the new main focus. There are many open-source\ntools that help you to deploy your application on clusters. In my opinion, one of the famous ones is Argo CD.\nIn this tutorial, we will install Argo CD on a cluster, login to UI, and deploy an application with it."}]},{type:a,value:f},{type:b,tag:E,props:{id:ah},children:[{type:b,tag:l,props:{href:"#what-is-argo-cd",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:ai}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Argo CD is a lightweight and easy to configure declarative GitOps tool. It is built to deploy applications to\nKubernetes. As continuous delivery (CD) has increasing popularity, Argo CD does provide many interesting\ncapabilities.  Unlike other CD tools, Argo CD is lightweight and easy to configure. It is purpose-built to deploy\napplications only to Kubernetes, its UI does not have overhead UI tools. It's also built with a GitOps flow.\nMeaning, everything ArgoCD sees as its source of truth is stored in a repository with multiple branches for\ndifferent purposes such as "},{type:b,tag:j,props:{},children:[{type:a,value:"canary"}]},{type:a,value:" and "},{type:b,tag:j,props:{},children:[{type:a,value:"production"}]},{type:a,value:F}]},{type:a,value:f},{type:b,tag:E,props:{id:aj},children:[{type:b,tag:l,props:{href:"#prerequisites",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:ak}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Before you get started, you will need to have a number of things."}]},{type:a,value:f},{type:b,tag:"ol",props:{},children:[{type:a,value:f},{type:b,tag:N,props:{},children:[{type:a,value:"Kubernetes cluster."}]},{type:a,value:f},{type:b,tag:N,props:{},children:[{type:b,tag:j,props:{},children:[{type:a,value:S}]},{type:a,value:" installed. If not, you will need it to manage your clusters."}]},{type:a,value:f},{type:b,tag:N,props:{},children:[{type:a,value:"Have a kubeconfig file (default location is ~\u002F.kube\u002Fconfig)."}]},{type:a,value:f},{type:b,tag:N,props:{},children:[{type:a,value:"Have a GitHub account."}]},{type:a,value:f}]},{type:a,value:f},{type:b,tag:z,props:{id:al},children:[{type:b,tag:l,props:{href:"#install-argo-cd-cli",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:am}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Once you have your cluster set and "},{type:b,tag:j,props:{},children:[{type:a,value:S}]},{type:a,value:" installed, let's install the Argo CD CLI tool. We will install it with\n"},{type:b,tag:j,props:{},children:[{type:a,value:"brew"}]},{type:a,value:" for Mac OS, you can find other installation directives on Argo CD\n"},{type:b,tag:l,props:{href:"https:\u002F\u002Fargoproj.github.io\u002Fargo-cd\u002Fcli_installation\u002F",rel:[H,I,J],target:K},children:[{type:a,value:"documentation"}]},{type:a,value:F}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,"language-shell"]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"brew tap argoproj\u002Ftap\nbrew "},{type:b,tag:c,props:{className:[d,aJ]},children:[{type:a,value:"install"}]},{type:a,value:" argoproj\u002Ftap\u002Fargocd\n"}]}]}]},{type:a,value:f},{type:b,tag:z,props:{id:an},children:[{type:b,tag:l,props:{href:"#install-argo-cd-to-the-cluster",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:ao}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"We need to install Argo CD to our cluster to be able to deploy applications."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,L]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"kubectl create namespace argocd\nkubectl apply -n argocd -f https:\u002F\u002Fraw.githubusercontent.com\u002Fargoproj\u002Fargo-cd\u002Fstable\u002Fmanifests\u002Finstall.yaml\n"}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"This will create a namespace within your cluster and Argo CD services and applications."}]},{type:a,value:f},{type:b,tag:z,props:{id:ap},children:[{type:b,tag:l,props:{href:"#access-argo-cd-api-server",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:aq}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"By default, Argo CD API server is not exposed to external IP for security reasons. For this tutorial, we will access\nthe server using port forwarding. Kubectl port-forwarding is used to connect to the API server without\nexposing the service to the outside. We will use the same method for our example application."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,L]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"kubectl port-forward svc\u002Fargocd-server -n argocd "},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:T}]},{type:a,value:":443\n"}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"This will expose Argo CD service to "},{type:b,tag:l,props:{href:aK,rel:[H,I,J],target:K},children:[{type:a,value:aL}]},{type:a,value:F}]},{type:a,value:f},{type:b,tag:z,props:{id:ar},children:[{type:b,tag:l,props:{href:"#login-to-argo-cd-in-console",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:as}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Before we access the Argo CD UI, we need to get and change the admin password. Let's list all the pods of "},{type:b,tag:j,props:{},children:[{type:a,value:ad}]},{type:a,value:"\nnamespace."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,L]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"kubectl get pods -n argocd "},{type:b,tag:c,props:{className:[d,"operator"]},children:[{type:a,value:"|"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,aJ]},children:[{type:a,value:"grep"}]},{type:a,value:" argocd-server\n"}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"This will output Argo CD server pod details. The name of the pod is our first password for the admin user. Once you\nrequest to\nlogin, it will ask for username and password. Use "},{type:b,tag:j,props:{},children:[{type:a,value:"admin"}]},{type:a,value:" for username, the pod's name for the password."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,L]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"argocd login localhost:8080\n"}]}]}]},{type:a,value:f},{type:b,tag:z,props:{id:at},children:[{type:b,tag:l,props:{href:"#change-argo-cd-admin-user-password",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:au}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Once you logged in, change the password for the admin user with the following command. You will be asked to enter the\nold password and new password."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,L]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"argocd account update-password\n"}]}]}]},{type:a,value:f},{type:b,tag:z,props:{id:av},children:[{type:b,tag:l,props:{href:"#login-argo-cd-ui",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:aw}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Now, let's go to "},{type:b,tag:l,props:{href:aK,rel:[H,I,J],target:K},children:[{type:a,value:aL}]},{type:a,value:" to access the UI."}]},{type:a,value:f},{type:b,tag:z,props:{id:ax},children:[{type:b,tag:l,props:{href:"#create-a-github-repository",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:ay}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"As we mentioned in the introduction, Argo CD follows GitOps flow. We will need a repository where we can store our\napplication manifest files. Let's create a repository and put the following "},{type:b,tag:j,props:{},children:[{type:a,value:Q}]},{type:a,value:", "},{type:b,tag:j,props:{},children:[{type:a,value:R}]},{type:a,value:", and "},{type:b,tag:j,props:{},children:[{type:a,value:"argocd  application"}]},{type:a,value:"\nYAML files into it. For this tutorial, I used "},{type:b,tag:l,props:{href:"https:\u002F\u002Fgithub.com\u002Fomegion\u002Fecho-k8s-app\u002F",rel:[H,I,J],target:K},children:[{type:a,value:"example repository"}]},{type:a,value:F}]},{type:a,value:f},{type:b,tag:z,props:{id:Q},children:[{type:b,tag:l,props:{href:"#deployment",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:az}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:U},{type:b,tag:j,props:{},children:[{type:a,value:"deployment.yaml"}]},{type:a,value:V}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,W]},children:[{type:b,tag:j,props:{},children:[{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" apps\u002Fv1\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" Deployment\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"deployment\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"replicas"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:"1"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"matchLabels"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"server\n  "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"template"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"labels"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"server\n    "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"containers"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aN},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aP}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" jmalloc\u002Fecho"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aO},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\n            "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" http"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"port\n              "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"containerPort"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:T}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:z,props:{id:R},children:[{type:b,tag:l,props:{href:"#service",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:aA}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:U},{type:b,tag:j,props:{},children:[{type:a,value:"service.yaml"}]},{type:a,value:V}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,W]},children:[{type:b,tag:j,props:{},children:[{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" v1\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" Service\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aR},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"service\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aQ}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" app\n      "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"port"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:"80"}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"targetPort"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,M]},children:[{type:a,value:T}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aM}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:Z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"server\n"}]}]}]},{type:a,value:f},{type:b,tag:z,props:{id:aB},children:[{type:b,tag:l,props:{href:"#argo-cd-application",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:aC}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:U},{type:b,tag:j,props:{},children:[{type:a,value:"argocd-app.yaml"}]},{type:a,value:V}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,W]},children:[{type:b,tag:j,props:{},children:[{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:X}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" argoproj.io\u002Fv1alpha1\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:Y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" Application\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:O}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:G}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:"# name of the Argo CD application"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" argocd\n"},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:P}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"project"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" default\n  "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"source"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aU}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\u002F\u002Fgithub.com\u002Fomegion\u002Fecho"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:"app\u002F "},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:"# change here with your repository url"}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"targetRevision"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" HEAD\n    "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"path"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:" kubernetes\n    "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"directory"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"recurse"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,$,aa]},children:[{type:a,value:m}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"destination"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aR}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:aV},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:"\u002F\u002Fkubernetes.default.svc\n    "},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:aT}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:A},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:r}]},{type:a,value:aS},{type:b,tag:c,props:{className:[d,_]},children:[{type:a,value:"# namespace we created"}]},{type:a,value:x},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"syncPolicy"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"automated"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"prune"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,$,aa]},children:[{type:a,value:aW}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,h,i]},children:[{type:a,value:"selfHeal"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:g}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,$,aa]},children:[{type:a,value:aW}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"After creating these files, push them to the repository. You can change "},{type:b,tag:j,props:{},children:[{type:a,value:aU}]},{type:a,value:" with the created repository. I used\nan example repository for this tutorial."}]},{type:a,value:f},{type:b,tag:E,props:{id:aD},children:[{type:b,tag:l,props:{href:"#deploy-argo-cd-application",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:aE}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"Once we have all three files, let's apply the Argo CD Application YAML file with "},{type:b,tag:j,props:{},children:[{type:a,value:S}]},{type:a,value:F}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,ab]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"kubectl apply -f argocd-app.yaml\n"}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"This will create an application in Argo CD UI."}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:b,tag:"img",props:{alt:aP,src:"\u002Fpublic\u002Fimg\u002Fargo-cd-application-screen-1.png",title:"Argo CD Application Screen"},children:[]}]},{type:a,value:f},{type:b,tag:E,props:{id:aF},children:[{type:b,tag:l,props:{href:"#access-argo-cd-application-with-port-forward",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:aG}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"In order to access an application from outside in the cluster, we would need an ingress. However, we didn't create\ningress to access our application from outside in this tutorial. To access our example application, we need to use\nport-forwarding as we did for "},{type:b,tag:j,props:{},children:[{type:a,value:"argocd-server"}]},{type:a,value:F}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,ab]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"kubectl port-forward svc\u002Fecho-server-service -n echo-server 8001:80\n"}]}]}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"This will create a tunnel between your local port and the application. Visit "},{type:b,tag:l,props:{href:"http:\u002F\u002Flocalhost:8001",rel:[H,I,J],target:K},children:[{type:a,value:"localhost:8001"}]},{type:a,value:"\non your browser. You will see the request details."}]},{type:a,value:f},{type:b,tag:s,props:{className:[t]},children:[{type:b,tag:u,props:{className:[v,ab]},children:[{type:b,tag:j,props:{},children:[{type:a,value:"Request served by echo-deployment-788c68557d-72fgl\n\nHTTP\u002F1.1 GET \u002F\n\nHost: localhost:8001\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8,tr;q=0.7\nCache-Control: max-age=0\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla\u002F5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit\u002F537.36 (KHTML, like Gecko) Chrome\u002F83.0.4103.116 Safari\u002F537.36\nSec-Fetch-User: ?1\nSec-Fetch-Dest: document\nConnection: keep-alive\nAccept: text\u002Fhtml,application\u002Fxhtml+xml,application\u002Fxml;q=0.9,image\u002Fwebp,image\u002Fapng,*\u002F*;q=0.8,application\u002Fsigned-exchange;v=b3;q=0.9\nSec-Fetch-Site: none\nSec-Fetch-Mode: navigate\nAccept-Encoding: gzip, deflate, br\n"}]}]}]},{type:a,value:f},{type:b,tag:E,props:{id:aH},children:[{type:b,tag:l,props:{href:"#conclusion",ariaHidden:m,tabIndex:n},children:[{type:b,tag:c,props:{className:[o,p,q]},children:[]}]},{type:a,value:aI}]},{type:a,value:f},{type:b,tag:k,props:{},children:[{type:a,value:"In this tutorial, we installed Argo CD into our existing cluster and created a simple application. Since Argo CD\nfollows GitOps flow, we needed to create a repository from that the Argo CD application can read the manifest files.\nFinally, we connect to our application with port-forward through application service and test the echo server\napplication."}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fhow-to-install-argocd-on-kubernetes-cluster",extension:".md",updatedAt:"2022-01-10T07:00:27.665Z",readingTime:311100},fetchState:{error:null,pending:false,timestamp:1641798128786}}},mutations:void 0}}("text","element","span","token","punctuation","\n",":","key","atrule","code","p","a","true",-1,"mdi","mdi-24px","mdi-link-variant","-","div","nuxt-content-highlight","pre","line-numbers"," ","\n  ",3,"h3"," echo","\n    ","\n      ",2,"h2",".","name","nofollow","noopener","noreferrer","_blank","language-bash","number","li","metadata","spec","deployment","service","kubectl","8080","Create "," file with following content.","language-yaml","apiVersion","kind","app","comment","boolean","important","language-text","kubernetes","argocd","k8s","introduction","Introduction","what-is-argo-cd","What is Argo CD","prerequisites","Prerequisites","install-argo-cd-cli","Install Argo CD CLI","install-argo-cd-to-the-cluster","Install Argo CD to the cluster","access-argo-cd-api-server","Access Argo CD API Server","login-to-argo-cd-in-console","Login to Argo CD in console","change-argo-cd-admin-user-password","Change Argo CD Admin User Password","login-argo-cd-ui","Login Argo CD UI","create-a-github-repository","Create a Github Repository","Deployment","Service","argo-cd-application","Argo CD Application","deploy-argo-cd-application","Deploy Argo CD Application","access-argo-cd-application-with-port-forward","Access Argo CD Application with Port Forward","conclusion","Conclusion","function","http:\u002F\u002Flocalhost:8080","localhost:8080","selector","\n        ","server\n          ","image","ports","server","server ","namespace","repoURL"," https","false")));